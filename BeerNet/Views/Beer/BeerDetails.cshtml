@using Microsoft.AspNetCore.Identity
@inject SignInManager<BeerNetUser> SignInManager
@model Beer
@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-2">
        <center><img src="@Model.GetImage()" width="120" /></center>
    </div>

    <div class="col-7">
        <a asp-controller="Brewery" asp-action="BreweryDetails" asp-route-id="@Model.Brewery.Id" class="dark-underline">
            @Model.Brewery.Name
        </a>
        <h1>@Model.Name</h1>

        <div class="row">
            <div class="col-2">
                <center><h6>Average rating</h6></center>
                <center><h2>@Math.Round(Model.AverageRating, 2)</h2></center>
            </div>

            <div class="col-10 pl-4">
                <div class="row">Style: @Model.Style.ToString().Replace('_', ' ')</div>
                <div class="row">Abv: @Model.Abv</div>
                <div class="row">Extract: @Model.Extract</div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @Model.Description
            </div>
        </div>

        <hr style="height:1px;border:none;color:black;background-color:black;" />


        @foreach (var rate in Model.BeerRates)
        {
            <div class="mt-4 font-weight-light">
                <h5>@rate.Rate</h5>
                <a href="/user/@rate.User.UserName">
                    @rate.User.UserName
                </a>
                <br />
                @rate.Description
                <hr />
            </div>
        }
    </div>

    <div class="col-3 text-center">
        @if (SignInManager.IsSignedIn(User))
        {
            // User commented beer before
            if (Model.BeerRates.Exists(r => r.User.Email == User.Identity.Name))
            {
                var oldBeerRate = Model.BeerRates.Where(r => r.User.Email == User.Identity.Name).FirstOrDefault();
                <form asp-action="EditRating" asp-route-beerId="@Model.Id">
                    <div class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">You already rated this beer, but you can edit your comment</label>

                        <div class="slidecontainer">
                            <input type="range" min="0" max="5" value="@oldBeerRate.Rate.ToString().Replace(',','.')" step="0.1" class="slider" id="ratingRange" name="ratingRange">
                            <p>Rate: <span id="chosenRate"></span></p>
                        </div>

                        <textarea class="form-control" placeholder="Comment" id="BeerRateDescription" name="BeerRateDescription" rows="7" required>@oldBeerRate.Description</textarea>
                        <input type="submit" value="Edit" class="btn btn-primary" />
                    </div>
                </form>
            }
            // User didn't comment beer yet
            else
            {

                <form asp-action="AddRating" asp-route-id="@Model.Id">
                    <div class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Rate this beer:</label>

                        <div class="slidecontainer">
                            <input type="range" min="0" max="5" value="2.5" step="0.1" class="slider" id="ratingRange" name="ratingRange">
                            <p>Rate: <span id="chosenRate"></span></p>
                        </div>

                        <textarea class="form-control" placeholder="Comment" id="BeerRateDescription" name="BeerRateDescription" rows="7" required></textarea>
                        <input type="submit" value="Rate" class="btn btn-primary" />
                    </div>
                </form>
            }
        }
        else
        {
            @:If you would like to rate this beer login first
        }
    </div>
</div>

<script>
    var slider = document.getElementById("ratingRange");
    var output = document.getElementById("chosenRate");
    output.innerHTML = slider.value; // Display the default slider value

    // Update the current slider value (each time you drag the slider handle)
    slider.oninput = function ()
    {
        output.innerHTML = this.value;
    }
</script>



